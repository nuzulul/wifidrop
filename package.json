{
  "name": "wifidrop",
  "version": "0.0.9",
  "description": "Local peer-to-peer file transfer via WIFI",
  "main": "cli/wifidrop.js",
  "bin": "./cli/wifidrop.js",
  "files": [
    "LICENSE",
    "cli/"
  ],
  "preferGlobal": true,
  "engines": {
    "node": ">= 0.10"
  },
  "type": "module",
  "dependencies": {
    "adm-zip": "^0.5.16",
    "detect-browsers": "^6.1.0",
    "kv-storage": "^0.0.9",
    "webconnect": "^0.0.10"
  },
  "devDependencies": {
    "esbuild": "^0.21.5",
    "nanoid": "^3.3.7",
    "picocolors": "^1.1.0",
    "postcss": "^8.4.47",
    "rollup": "^4.23.0",
    "source-map-js": "^1.2.1",
    "vite": "^5.4.8"
  },
  "scripts": {
    "start": "npm run dev",
    "dev": "vite",
    "build": "npm run removedir dist & vite build",
    "preview": "vite preview",
    "cli": "node cli/wifidrop.js",
    "removedir": "node -e \"var fs = require('fs'); try{process.argv.slice(1).map((fpath) => fs.rmdirSync(fpath, { recursive: true }))}catch(err){console.log(`Dist not found`)}; process.exit(0);\"",
    "gh-deploy-init": "git push origin && git subtree push --prefix dist origin gh-pages",
    "gh-deploy": "git push origin :gh-pages && git subtree push --prefix dist origin gh-pages",
    "gh-old": "npm run removedir dist && npm run build && git add dist -f && git commit -m \"dist\" && npm run gh-deploy && git reset --soft HEAD~ && git restore --staged .",
    "gh-pages": "npm run removedir dist && git checkout --orphan temp_branch && npm run build && git add dist -f && git commit -m \"dist\" && npm run gh-deploy && git checkout main && git branch -D temp_branch",
	"snapcraftclone": "node -e \"import { copyFile } from 'node:fs/promises'; import fs from 'node:fs'; import { promisify } from 'node:util'; const mkdir = promisify(fs.mkdir); try { await mkdir('dist/cli', { recursive: true }); await mkdir('dist/snap', { recursive: true }); await copyFile('./package.json', './dist/package.json'); await copyFile('./cli/wifidrop.js', './dist/cli/wifidrop.js'); await copyFile('./snap/snapcraft.yaml', './dist/snap/snapcraft.yaml'); } catch (err) {console.log('Clone error');}; process.exit(0);\"",
	"snapcraft": "docker run --rm -it --privileged -v %cd%:/data -w /data diddledani/snapcraft:core22",
	"snapcraft-clean": "docker run --rm -it --privileged -v %cd%:/data -w /data diddledani/snapcraft:core22 snapcraft clean",
	"gh-temp-first": "git checkout -b branch_saved && git add . && git commit -m \"saved\" && git checkout --orphan branch_temp && git commit -m \"temp\" && git push --set-upstream origin branch_temp && git checkout main && git branch -D branch_temp && git merge branch_saved && git branch -D branch_saved && git reset --soft HEAD~1 && git restore --staged .",
	"gh-temp": "git push origin :branch_temp && npm run gh-temp-first",
	"build-exe": "csc /target:winexe /win32icon:src/public/icon-512.ico ./tools/launcher/wifidrop.cs && move wifidrop.exe ./tools/launcher/ & cd ..\\..",
	"build-win-installer": "node -p \"require('./package.json').version\">tools\\launcher\\wifidrop.txt & cd tools\\launcher && iexpress /N wifidrop.sed",
	"deb-update-version": "node -p \"require('./package.json').version\">tools\\deb\\data\\wifidrop & set /p myversion=<tools\\deb\\data\\wifidrop & CALL tools\\util\\editversion.bat %myversion% 2 tools\\deb\\control & git log --format=\"%H\" -n1>tools\\deb\\data\\wifidrop",
	"build-win-deb": "npm run deb-update-version & wpkg -b tools\\deb",
	"build-win-old": "npm run removedir dist & md dist & node -p \"require('./package.json').version\">dist\\version & set /p myversion=<dist\\version & CALL echo %myversion% & npm run build-win-installer & CALL move tools\\launcher\\wifidrop.exe dist\\wifidrop-%myversion%-windows.exe & cd dist & CALL tar.exe -a -cf wifidrop-%myversion%-windows.zip wifidrop-%myversion%-windows.exe & cd .. & npm run build-win-deb & CALL move tools\\deb\\wifidrop.deb dist\\wifidrop-%myversion%-linux.deb",
	"build-win": "npm run removedir dist & md dist & git log --format=\"%H\" -n1>tools\\launcher\\wifidrop.txt & git log --format=\"%H\" -n1>tools\\util\\wifidrop.txt & node -p \"require('./package.json').version\">dist\\version & set /p myversion=<dist\\version & CALL echo %myversion% & cd tools\\util & iexpress /N install.sed & cd .. & cd .. & CALL move tools\\util\\wifidrop.exe dist\\wifidrop-%myversion%-windows.exe & cd dist & CALL tar.exe -a -cf wifidrop-%myversion%-windows.zip wifidrop-%myversion%-windows.exe & cd .. & npm run build-win-deb & CALL move tools\\deb\\wifidrop.deb dist\\wifidrop-%myversion%-linux.deb"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nuzulul/wifidrop.git"
  },
  "keywords": [
    "file-transfer",
    "file-sharing",
    "file-upload"
  ],
  "author": "Nuzulul Zulkarnain",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/nuzulul/wifidrop/issues"
  },
  "homepage": "https://github.com/nuzulul/wifidrop#readme"
}
